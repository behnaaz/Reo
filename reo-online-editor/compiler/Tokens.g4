lexer grammar Tokens;

LEQ     : '<=' ;
LT      : '<' ;
GEQ     : '>=' ;
GT      : '>' ;
FORALL  : 'forall' ;
EXISTS  : 'exists' ;
EQ      : '=' ;
NEQ     : '!=' ;
AND     : '&&' ;
OR      : '||' ;
IMPLIES : '->' ;
IN      : '?' ;
OUT     : '!' ;
MIX     : ':' ;
POW     : '^' ;
MUL     : '*' ;
DIV     : '/' ;
MOD     : '%' ;
ADD     : '+' ;
MIN     : '-' ;
SCL     : ';' ;
AMP     : '&' ;
LIST	: '..' ;
NAT     : ('0'|[1-9][0-9]*) ;
DEC     : ('0'|[1-9][0-9]*) '.' [0-9]+ ;
BOOL    : 'true'|'false' ;
ID      : [a-zA-Z][a-zA-Z0-9_]*;
STRING  : '"' .*? '"' ;
WHITESPACE : [ \t\r\n]+ -> skip ;
SL_COMM    : '//' .*? ('\n'|EOF) -> skip ;
META_COMM  : '/*!' .*? '!*/' ;
ML_COMM    : '/*' .*? '*/' -> skip ;
